{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum_app\\\\forum_app\\\\src\\\\models\\\\dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { getPosts, savePosts, getUsers, saveUsers } from '../storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const [likedPosts, setLikedPosts] = useState([]);\n  useEffect(() => {\n    setPosts(getPosts());\n    const users = getUsers();\n    const currentUser = users.find(u => u.username === user);\n    setLikedPosts((currentUser === null || currentUser === void 0 ? void 0 : currentUser.likedPosts) || []);\n  }, [user]);\n  const handleAddPost = () => {\n    const updatedPosts = [...posts, {\n      content: newPost,\n      likes: 0,\n      id: Date.now()\n    }];\n    setPosts(updatedPosts);\n    savePosts(updatedPosts);\n    setNewPost('');\n  };\n  const handleLikePost = postId => {\n    if (likedPosts.includes(postId)) {\n      alert('You have already liked this post.');\n      return;\n    }\n\n    // Update the post with a new like\n    const updatedPosts = posts.map(post => post.id === postId ? {\n      ...post,\n      likes: post.likes + 1\n    } : post);\n    setPosts(updatedPosts);\n    savePosts(updatedPosts);\n\n    // Update the liked posts for the current user\n    const updatedLikedPosts = [...likedPosts, postId];\n    setLikedPosts(updatedLikedPosts);\n\n    // Update user data in Local Storage\n    const users = getUsers();\n    const updatedUsers = users.map(u => u.username === user ? {\n      ...u,\n      likedPosts: updatedLikedPosts\n    } : u);\n    saveUsers(updatedUsers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newPost,\n      onChange: e => setNewPost(e.target.value),\n      placeholder: \"New post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddPost,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [post.content, \" - \", post.likes, \" Likes\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLikePost(post.id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"i45ajSbNhz4YvpIOkfU6X7C4kiM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","savePosts","getUsers","saveUsers","jsxDEV","_jsxDEV","Dashboard","user","_s","posts","setPosts","newPost","setNewPost","likedPosts","setLikedPosts","users","currentUser","find","u","username","handleAddPost","updatedPosts","content","likes","id","Date","now","handleLikePost","postId","includes","alert","map","post","updatedLikedPosts","updatedUsers","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/forum_app/forum_app/src/models/dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getPosts, savePosts, getUsers, saveUsers } from '../storage';\r\n\r\nfunction Dashboard({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newPost, setNewPost] = useState('');\r\n  const [likedPosts, setLikedPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setPosts(getPosts());\r\n    const users = getUsers();\r\n    const currentUser = users.find((u) => u.username === user);\r\n    setLikedPosts(currentUser?.likedPosts || []);\r\n  }, [user]);\r\n\r\n  const handleAddPost = () => {\r\n    const updatedPosts = [...posts, { content: newPost, likes: 0, id: Date.now() }];\r\n    setPosts(updatedPosts);\r\n    savePosts(updatedPosts);\r\n    setNewPost('');\r\n  };\r\n\r\n  const handleLikePost = (postId) => {\r\n    if (likedPosts.includes(postId)) {\r\n      alert('You have already liked this post.');\r\n      return;\r\n    }\r\n\r\n    // Update the post with a new like\r\n    const updatedPosts = posts.map((post) =>\r\n      post.id === postId ? { ...post, likes: post.likes + 1 } : post\r\n    );\r\n    setPosts(updatedPosts);\r\n    savePosts(updatedPosts);\r\n\r\n    // Update the liked posts for the current user\r\n    const updatedLikedPosts = [...likedPosts, postId];\r\n    setLikedPosts(updatedLikedPosts);\r\n\r\n    // Update user data in Local Storage\r\n    const users = getUsers();\r\n    const updatedUsers = users.map((u) =>\r\n      u.username === user ? { ...u, likedPosts: updatedLikedPosts } : u\r\n    );\r\n    saveUsers(updatedUsers);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={newPost}\r\n        onChange={(e) => setNewPost(e.target.value)}\r\n        placeholder=\"New post\"\r\n      />\r\n      <button onClick={handleAddPost}>Add Post</button>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.id}>\r\n            {post.content} - {post.likes} Likes\r\n            <button onClick={() => handleLikePost(post.id)}>Like</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}